@model ElectroShop.Models.Product

<div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-all duration-500 group card-hover glow">
    <div class="relative">
        <a href="@Url.Action("Details", "Products", new { id = Model.Id })">
            <img src="@Model.Image" alt="@Model.Name" 
                 class="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-500" />
        </a>
        @if (Model.OriginalPrice.HasValue && Model.OriginalPrice > Model.Price)
        {
            <div class="absolute top-2 left-2 bg-red-500 text-white px-2 py-1 rounded text-xs font-bold">
                Giảm @(Math.Round((1 - (double)(Model.Price / Model.OriginalPrice)) * 100))%
            </div>
        }
        @if (Model.Featured)
        {
            <div class="absolute top-2 right-2 bg-blue-500 text-white px-2 py-1 rounded text-xs font-bold">
                Hot
            </div>
        }
        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-500 flex items-center justify-center">
            <div class="transform translate-y-4 group-hover:translate-y-0 opacity-0 group-hover:opacity-100 transition-all duration-500 flex space-x-2">
                <a href="@Url.Action("Details", "Products", new { id = Model.Id })" 
                   class="bg-white p-2 rounded-full hover:bg-blue-50 transition-all duration-300 hover:scale-110 ripple">
                    <svg class="h-5 w-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                </a>
                <button onclick="addToCart('@Model.Id')" 
                        class="bg-blue-600 p-2 rounded-full hover:bg-blue-700 transition-all duration-300 hover:scale-110 ripple">
                    <svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"></path>
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <div class="p-4">
        <div class="text-xs text-gray-500 mb-1">@Model.Code</div>
        <a href="@Url.Action("Details", "Products", new { id = Model.Id })">
            <h3 class="text-lg font-semibold text-gray-900 mb-2 hover:text-blue-600 transition-all duration-300 line-clamp-2">
                @Model.Name
            </h3>
        </a>
        
        <div class="flex items-center mb-2">
            <div class="flex items-center space-x-1">
                @for (int i = 1; i <= 5; i++)
                {
                    <svg class="h-4 w-4 @(i <= Math.Floor(Model.Rating) ? "text-yellow-400 fill-current" : "text-gray-300")" 
                         fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                }
            </div>
            <span class="text-sm text-gray-500 ml-2">(@Model.Reviews)</span>
        </div>

        <p class="text-sm text-gray-600 mb-3 line-clamp-2">@Model.Description</p>

        <div class="flex items-center justify-between">
            <div class="flex flex-col">
                @if (Model.OriginalPrice.HasValue && Model.OriginalPrice > Model.Price)
                {
                    <span class="text-sm text-gray-500 line-through">
                        @Model.OriginalPrice.Value.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                    </span>
                }
                <span class="text-lg font-bold text-blue-600">
                    @Model.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                </span>
            </div>
            <div class="flex items-center space-x-2">
                @if (Model.InStock)
                {
                    <span class="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">Có hàng</span>
                }
                else
                {
                    <span class="text-xs bg-red-100 text-red-800 px-2 py-1 rounded-full">Hết hàng</span>
                }
            </div>
        </div>
    </div>
</div>