@model ElectroShop.Models.Product
@{
    ViewData["Title"] = Model.Name;
}

<div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Breadcrumb -->
        <nav class="flex mb-8" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="@Url.Action("Index", "Home")" class="text-gray-700 hover:text-blue-600">Trang chủ</a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <a href="@Url.Action("Index", "Products")" class="ml-1 text-gray-700 hover:text-blue-600 md:ml-2">Sản phẩm</a>
                    </div>
                </li>
                <li aria-current="page">
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="ml-1 text-gray-500 md:ml-2">@Model.Name</span>
                    </div>
                </li>
            </ol>
        </nav>

        <div class="bg-white rounded-lg shadow-lg overflow-hidden">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 p-8">
                <!-- Product Image -->
                <div class="space-y-4">
                    <div class="aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden">
                        <img src="@Model.Image" alt="@Model.Name" class="w-full h-full object-center object-cover" />
                    </div>
                </div>

                <!-- Product Info -->
                <div class="space-y-6">
                    <div>
                        <p class="text-sm text-gray-500 mb-2">@Model.Code</p>
                        <h1 class="text-3xl font-bold text-gray-900 mb-4">@Model.Name</h1>
                        
                        <!-- Rating -->
                        <div class="flex items-center mb-4">
                            <div class="flex items-center space-x-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <svg class="h-5 w-5 @(i <= Math.Floor(Model.Rating) ? "text-yellow-400 fill-current" : "text-gray-300")" 
                                         fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                    </svg>
                                }
                            </div>
                            <span class="ml-2 text-sm text-gray-600">@Model.Rating (@Model.Reviews đánh giá)</span>
                        </div>

                        <!-- Price -->
                        <div class="mb-6">
                            @if (Model.OriginalPrice.HasValue && Model.OriginalPrice > Model.Price)
                            {
                                <div class="flex items-center space-x-2 mb-2">
                                    <span class="text-2xl font-bold text-red-600">
                                        @Model.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                    </span>
                                    <span class="text-lg text-gray-500 line-through">
                                        @Model.OriginalPrice.Value.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                    </span>
                                    <span class="bg-red-100 text-red-800 text-sm font-medium px-2.5 py-0.5 rounded">
                                        -@(Math.Round((1 - (double)(Model.Price / Model.OriginalPrice)) * 100))%
                                    </span>
                                </div>
                            }
                            else
                            {
                                <span class="text-2xl font-bold text-blue-600">
                                    @Model.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                </span>
                            }
                        </div>

                        <!-- Stock Status -->
                        <div class="mb-6">
                            @if (Model.InStock)
                            {
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                    </svg>
                                    Còn hàng
                                </span>
                            }
                            else
                            {
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800">
                                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                                    </svg>
                                    Hết hàng
                                </span>
                            }
                        </div>

                        <!-- Add to Cart -->
                        <div class="flex items-center space-x-4 mb-8">
                            <div class="flex items-center border border-gray-300 rounded-lg">
                                <button type="button" class="px-3 py-2 text-gray-600 hover:text-gray-800" onclick="decreaseQuantity()">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                                    </svg>
                                </button>
                                <input type="number" id="quantity" value="1" min="1" class="w-16 px-3 py-2 text-center border-0 focus:ring-0" />
                                <button type="button" class="px-3 py-2 text-gray-600 hover:text-gray-800" onclick="increaseQuantity()">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                </button>
                            </div>
                            <button onclick="addToCartWithQuantity('@Model.Id')" 
                                    class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors @(Model.InStock ? "" : "opacity-50 cursor-not-allowed")" 
                                    @(Model.InStock ? "" : "disabled")>
                                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"></path>
                                </svg>
                                Thêm vào giỏ hàng
                            </button>
                        </div>

                        <!-- Product Info -->
                        <div class="space-y-4">
                            <div>
                                <span class="font-semibold text-gray-900">Danh mục:</span>
                                <span class="text-gray-600 ml-2">@Model.Category</span>
                            </div>
                            <div>
                                <span class="font-semibold text-gray-900">Thương hiệu:</span>
                                <span class="text-gray-600 ml-2">@Model.Brand</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product Details Tabs -->
            <div class="border-t border-gray-200">
                <div class="px-8 py-6">
                    <div class="border-b border-gray-200">
                        <nav class="-mb-px flex space-x-8">
                            <button class="tab-button active border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" 
                                    onclick="showTab('description')">
                                Mô tả
                            </button>
                            <button class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" 
                                    onclick="showTab('specifications')">
                                Thông số kỹ thuật
                            </button>
                        </nav>
                    </div>

                    <div class="mt-6">
                        <div id="description-tab" class="tab-content">
                            <p class="text-gray-700 leading-relaxed">@Model.Description</p>
                        </div>
                        <div id="specifications-tab" class="tab-content hidden">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                @foreach (var spec in Model.Specifications)
                                {
                                    <div class="flex justify-between py-2 border-b border-gray-100">
                                        <span class="font-medium text-gray-900">@spec.Key:</span>
                                        <span class="text-gray-600">@spec.Value</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showTab(tabName) {
            // Hide all tabs
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
            });
            
            // Remove active class from all buttons
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active', 'border-blue-500', 'text-blue-600');
                button.classList.add('border-transparent', 'text-gray-500');
            });
            
            // Show selected tab
            document.getElementById(tabName + '-tab').classList.remove('hidden');
            
            // Add active class to clicked button
            event.target.classList.add('active', 'border-blue-500', 'text-blue-600');
            event.target.classList.remove('border-transparent', 'text-gray-500');
        }

        function increaseQuantity() {
            const input = document.getElementById('quantity');
            input.value = parseInt(input.value) + 1;
        }

        function decreaseQuantity() {
            const input = document.getElementById('quantity');
            if (parseInt(input.value) > 1) {
                input.value = parseInt(input.value) - 1;
            }
        }

        function addToCartWithQuantity(productId) {
            const quantity = document.getElementById('quantity').value;
            addToCart(productId, quantity);
        }
    </script>
}